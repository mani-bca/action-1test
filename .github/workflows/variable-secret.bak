name: variable and secreat
on:
    push
env:
    CONTAINER_REGISTRY: docker.io
    DOCKER_USERNAME: mani-bca
    IMAGE_NAME: github-action-nginx
    
jobs:
    # docker_build:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: docker build stage
    #           run: docker build -t ${{ env.CONTAINER_REGISTRY }}/dockerUsername/imageName:latest

    #         - name: docker login 
    #           run: docker login --username=dockerUsername --password=${{ secrets.DOCKER_PASSWORD }}

    #         - name: docker publish
    #           run: docker push docker.io/dockerUsername/imageName:latest
        
    # deploy:
    #     needs: docker_build
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: docker
    #           run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest

########################################steps level######################
    # docker_build:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: docker build stage
    #           env:
    #             CONTAINER_REGISTRY: docker.io
    #             DOCKER_USERNAME: mani-bca
    #             IMAGE_NAME: github-action-nginx
    #           run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

    #         - name: docker login 
    #           env:
    #             DOCKER_PASSWORD: s3cUrePassword
    #             DOCKER_USERNAME: mani-bca
    #           run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

    #         - name: docker publish
    #           env:
    #             CONTAINER_REGISTRY: docker.io
    #             DOCKER_USERNAME: mani-bca
    #             IMAGE_NAME: github-action-nginx
    #           run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

        
    # deploy:
    #     needs: docker_build
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: docker run
    #           env:
    #             CONTAINER_REGISTRY: docker.io
    #             DOCKER_USERNAME: mani-bca
    #             IMAGE_NAME: github-action-nginx
    #           run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#############################job level############################################3
    docker_build:
        env:
            CONTAINER_REGISTRY: docker.io
            DOCKER_USERNAME: mani-bca
            IMAGE_NAME: github-action-nginx
            
        runs-on: ubuntu-latest
        steps:
            - name: docker build stage
              run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

            - name: docker login 
              env:
                DOCKER_PASSWORD: s3cUrePassword
              run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

            - name: docker publish
              run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

            
    deploy:
        env:
            CONTAINER_REGISTRY: docker.io
            DOCKER_USERNAME: mani-bca
            IMAGE_NAME: github-action-nginx
        needs: docker_build
        runs-on: ubuntu-latest
        steps:
            - name: docker run
              run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
##################################workflow level######################################3
    docker_build:
        env:
            CONTAINER_REGISTRY: docker.io
            DOCKER_USERNAME: mani-bca
            IMAGE_NAME: github-action-nginx
            
        runs-on: ubuntu-latest
        steps:
            - name: docker build stage
              run: echo docker build -t ${{CONTAINER_REGISTRY}}/${{DOCKER_USERNAME}}/${{IMAGE_NAME}}:latest

            - name: docker login 
              env:
                DOCKER_PASSWORD: s3cUrePassword
              run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

            - name: docker publish
              run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

            
    deploy:
        env:
            CONTAINER_REGISTRY: docker.io
            DOCKER_USERNAME: mani-bca
            IMAGE_NAME: github-action-nginx
        needs: docker_build
        runs-on: ubuntu-latest
        steps:
            - name: docker run
              run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
